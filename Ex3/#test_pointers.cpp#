#include <iostream>
// test_pointers.cpp
// COMPLETE include necessary headers
using namespace std;
int main(void)
{
  //
  // 1. declare a variable dblPtr as a pointer to a double
  double* dblPtr;
  // 2. allocate memory on the heap corresponding to one double and make dblPtr points to this location
  
  // 3. store the value 3.14159 at the memory location pointed to by dblPtr
  // 4. print out the content of the memory location pointed to by dblPtr
  // 5. delete the memory pointed to by dblPtr

  //
  unsigned int a[5] = {1, 2, 3, 4, 5};
  // 6. declare a variable intPtr as a pointer to an unsigned int
  // 7. make intPtr points to the beginning of the array a
  // 8. print out what intPtr points to and the content of a[0]
  // 9. increase intPtr by 1 and check that what it points to corresponds to a[1]
  // 10. make intPtr points to the fourth element of the array by increasing it by 2
  //     and check that what it points to corresponds to a[3]

  // 
  int n = 10;
  // 11. declare a variable "fltArray" as a pointer to float and 
  // make it point to an array of "n" element of type "float" created on the heap
  // 12. store in each fltArray[i] (for i=0 to n-1) the value float(i) / 5.0f;
  // 13. print out each element of fltArray
  // 14. delete the previously allocated memory

  //
  int m = 5;
  double** dblArray;
  // 14. allocate memory for a 2d array of size m * n on the heap (i.e. m arrays of size n). 
  // Make dblArray points to this 2d array.
  for (int i = 0; i < m; i++)
    for (int j = 0; j < n; j++)
      dblArray[i][j] = (3.14 * i) / (j+1.0);

  // 15. print out each element of dblArray
  // 16. delete the memory allocated for the 2d array

  return 0;
}